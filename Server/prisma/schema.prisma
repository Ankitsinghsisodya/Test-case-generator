// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int            @id @default(autoincrement())
  name             String
  password         String?
  email            String         @unique
  googleId         String?        @unique
  picture          String?
  isPremium        Boolean        @default(false)
  premiumExpiresAt DateTime?
  subscriptions    Subscription[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Subscription {
  id                Int                @id @default(autoincrement())
  userId            Int
  razorpayOrderId   String?             @unique
  razorpayPaymentId String?            @unique
  amount            Int // amount in paise
  currency          String             @default("INR")
  status            SubscriptionStatus @default(CREATED)
  expiresAt         DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Otp {
  id        Int      @id @default(autoincrement())
  otp       Int
  email     String
  used      Boolean  @default(false)
  createdAt DateTime @default(now())

  @@index([email])
}


enum SubscriptionStatus {
  CREATED
  PAID
  FAILED
  CANCELLED
  EXPIRED
  PENDING
}
